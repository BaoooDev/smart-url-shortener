import { Injectable } from '@nestjs/common';
import axios from 'axios';
import * as crypto from 'crypto';
import * as dotenv from 'dotenv';

dotenv.config();

@Injectable()
export class VirusTotalService {
  private API_KEY = process.env.VIRUSTOTAL_API_KEY;
  private API_URL_SCAN = "https://www.virustotal.com/api/v3/urls";
  private API_URL_DOMAIN = "https://www.virustotal.com/api/v3/domains/";

  async checkUrlSafety(url: string): Promise<boolean> {
    try {
      console.log(`üîç ƒêang ki·ªÉm tra URL: ${url}`);

      // üìå L·∫•y domain t·ª´ URL (VD: http://malware.test.com -> malware.test.com)
      const domain = new URL(url).hostname;
      console.log(`üåê Domain Extracted: ${domain}`);

      // üìå B∆∞·ªõc 1: Ki·ªÉm tra domain c√≥ t·ªìn t·∫°i tr√™n VirusTotal kh√¥ng
      const reportResponse = await axios.get(
        `${this.API_URL_DOMAIN}${domain}`,
        {
          headers: {
            "x-apikey": this.API_KEY
          },
        }
      );

      console.log("üì© K·∫øt qu·∫£ ph√¢n t√≠ch domain:", reportResponse.data);

      // üìå N·∫øu domain c√≥ trong database, ki·ªÉm tra s·ªë l∆∞·ª£ng "malicious"
      if (reportResponse.data.data?.attributes?.last_analysis_stats?.malicious > 0) {
        console.log("‚ö†Ô∏è URL b·ªã ƒë√°nh d·∫•u l√† ƒë·ªôc h·∫°i!");
        return false;
      }

      // üìå N·∫øu domain kh√¥ng c√≥ c·∫£nh b√°o, th√¨ URL ƒë∆∞·ª£c coi l√† an to√†n
      return true;
    } catch (error: any) {
      if (error.response?.status === 404) {
        console.warn("‚ö†Ô∏è URL ch∆∞a c√≥ tr√™n VirusTotal, g·ª≠i y√™u c·∫ßu scan...");

        // üìå N·∫øu URL ch∆∞a c√≥ trong database, g·ª≠i y√™u c·∫ßu scan
        try {
          const scanResponse = await axios.post(
            this.API_URL_SCAN,
            { url },
            {
              headers: {
                "x-apikey": this.API_KEY,
                "Content-Type": "application/json",
              },
            }
          );

          console.log("üì© Y√™u c·∫ßu scan VirusTotal:", scanResponse.data);
          console.log("‚åõ ƒê·ª£i 10 gi√¢y ƒë·ªÉ ki·ªÉm tra l·∫°i...");

          // üìå Ch·ªù 10 gi√¢y ƒë·ªÉ VirusTotal x·ª≠ l√Ω scan
          await new Promise((resolve) => setTimeout(resolve, 10000));

          // üìå Ki·ªÉm tra l·∫°i domain sau khi scan
          const finalReport = await axios.get(
            `${this.API_URL_DOMAIN}${new URL(url).hostname}`,
            {
              headers: {
                "x-apikey": this.API_KEY
              },
            }
          );

          console.log("üì© K·∫øt qu·∫£ sau khi scan:", finalReport.data);

          // üìå N·∫øu s·ªë l∆∞·ª£ng malicious > 0, ch·∫∑n URL
          return finalReport.data.data?.attributes?.last_analysis_stats?.malicious === 0;
        } catch (scanError) {
          console.error("‚ùå L·ªói khi g·ª≠i y√™u c·∫ßu scan:", scanError.message);
          return true; // N·∫øu l·ªói, cho ph√©p URL (tr√°nh crash API)
        }
      } else {
        console.error("‚ùå L·ªói g·ªçi VirusTotal API:", error.message);
        return true; // N·∫øu l·ªói kh√°c x·∫£y ra, m·∫∑c ƒë·ªãnh cho ph√©p URL
      }
    }
  }
}
